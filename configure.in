dnl
dnl Configure template for G10
dnl
dnl (Process this file with autoconf to produce a configure script.)

AC_INIT(g10/g10.c)
AC_CONFIG_AUX_DIR(scripts)
AM_CONFIG_HEADER(config.h)


if test "x$exec_prefix" = xNONE ; then
    if test "x$prefix" = xNONE ; then
	g10_prefix="$ac_default_prefix"
    else
	g10_prefix="$prefix"
    fi
else
    g10_prefix="$exec_prefix"
fi


VERSION=`cat $srcdir/VERSION`
PACKAGE=g10
ALL_LINGUAS="de"
AC_SUBST(VERSION)
AC_SUBST(PACKAGE)
AC_DEFINE_UNQUOTED(VERSION, "$VERSION")
AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE")

AC_ARG_ENABLE(m-debug,
[  --enable-m-debug	  Enable debugging of memory allocation])
if test "$enableval" = y || test "$enableval" = yes; then
    AC_DEFINE(M_DEBUG)
fi

dnl Some systems have a broken zlib. "--disable-zlib" avoids it's usage
enableval=yes
AC_ARG_ENABLE(zlib,
[  --disable-zlib	  Avoid usage of zlib])
if test "$enableval" = y || test "$enableval" = yes; then
    g10_use_zlib=yes
else
    g10_use_zlib=no
fi
CFLAGS="-g -Wall"



AC_CANONICAL_SYSTEM
WK_CHECK_CACHE

dnl Checks for programs.

AC_PROG_MAKE_SET
AC_ARG_PROGRAM

missing_dir=`cd $ac_aux_dir && pwd`
AM_MISSING_PROG(ACLOCAL, aclocal, $missing_dir)
AM_MISSING_PROG(AUTOCONF, autoconf, $missing_dir)
AM_MISSING_PROG(AUTOMAKE, automake, $missing_dir)
AM_MISSING_PROG(AUTOHEADER, autoheader, $missing_dir)
dnl AM_MISSING_PROG(MAKEINFO, makeinfo, $missing_dir)

case "${target}" in
    i386--mingw32)
	# special stuff for Windoze NT
	cross_compiling=yes
	CC="i386--mingw32-gcc"
	CPP="i386--mingw32-gcc -E"
	RANLIB="i386--mingw32-ranlib"
	ac_cv_have_dev_random=no
	;;
    *)
AC_PROG_RANLIB
AC_PROG_INSTALL
AC_PROG_CC
AC_PROG_CPP
       ;;
esac


dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(unistd.h)

AM_GNU_GETTEXT
G10_LOCALEDIR="$g10_prefix/$DATADIRNAME/locale"
AC_SUBST(G10_LOCALEDIR)
AC_DEFINE_UNQUOTED(G10_LOCALEDIR, "$G10_LOCALEDIR")

WK_LINK_FILES($nls_cv_header_libgt, $nls_cv_header_intl )

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T

WK_CHECK_ENDIAN


WK_CHECK_TYPEDEF(byte, HAVE_BYTE_TYPEDEF)
WK_CHECK_TYPEDEF(ushort, HAVE_USHORT_TYPEDEF)
WK_CHECK_TYPEDEF(ulong, HAVE_ULONG_TYPEDEF)
WK_CHECK_TYPEDEF(u16, HAVE_U16_TYPEDEF)
WK_CHECK_TYPEDEF(u32, HAVE_U32_TYPEDEF)

AC_CHECK_SIZEOF(unsigned short, 2)
AC_CHECK_SIZEOF(unsigned int, 4)
AC_CHECK_SIZEOF(unsigned long, 4)

if test "$ac_cv_sizeof_unsigned_short" = "0" \
   || test "$ac_cv_sizeof_unsigned_int" = "0" \
   || test "$ac_cv_sizeof_unsigned_long" = "0"; then
    AC_MSG_WARN([Hmmm, something is wrong with the sizes - using defaults]);
fi



dnl Checks for library functions.
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(strerror stpcpy strlwr tcgetattr rand strtoul mlock mmap)




dnl check wether we have a random device
AC_CACHE_CHECK(for random device, ac_cv_have_dev_random,
[if test -c /dev/random && test -c /dev/urandom ; then
  ac_cv_have_dev_random=yes; else ac_cv_have_dev_random=no; fi])
if test "$ac_cv_have_dev_random" = yes; then
    AC_DEFINE(HAVE_DEV_RANDOM)
fi


dnl setup assembler stuff
AC_MSG_CHECKING(for mpi assembler functions)
mpi_config_done="no"
AC_CACHE_VAL(ac_cv_mpi_config_done,
	     [ ac_cv_mpi_config_done="$mpi_config_done" ])
if test "$ac_cv_mpi_config_done" = yes; then
    AC_MSG_RESULT(done)
else
ac_cv_mpi_config_done=""
if test -f $srcdir/mpi/config.links ; then
    . $srcdir/mpi/config.links
    WK_LINK_FILES($mpi_ln_src, $mpi_ln_dst)
    ac_cv_mpi_extra_asm_modules="$mpi_extra_modules"
    ac_cv_mpi_config_done="yes"
    AC_MSG_RESULT(done)
else
    AC_MSG_RESULT(failed)
    AC_MSG_ERROR([mpi/config.links missing!])
fi
fi
MPI_EXTRA_ASM_OBJS=""
if test "$ac_cv_mpi_extra_asm_modules" != ""; then
WK_MSG_PRINT([mpi extra asm functions:])
for i in $ac_cv_mpi_extra_asm_modules; do
    WK_MSG_PRINT([$i])
    MPI_EXTRA_ASM_OBJS="$MPI_EXTRA_ASM_OBJS $i.o"
done
AC_MSG_RESULT()
fi
AC_SUBST(MPI_EXTRA_ASM_OBJS)

dnl Do we have zlib? Must do it here because Solaris failed
dnl when compiling a conftest (due to the "-lz" from LIBS).
if test "$g10_use_zlib" = "yes"; then
AC_CHECK_HEADERS(zlib.h,
		 [LIBS="$LIBS -lz"],
		 AC_MSG_WARN([zlib missing - creating without ZLIB support!])
		)
fi
AC_SUBST(HAVE_ZLIB_H)

dnl checking whether we have other cipher source files
CIPHER_EXTRA_OBJS=""
CIPHER_EXTRA_DIST=""
AC_CACHE_CHECK(for extra cipher modules, ac_cv_have_rsa_cipher,
[if test -f $srcdir/cipher/rsa.c && test -f $srcdir/cipher/rsa.h; then
  ac_cv_have_rsa_cipher=yes; else ac_cv_have_rsa_cipher=no; fi])
if test $ac_cv_have_rsa_cipher = yes; then
    AC_DEFINE(HAVE_RSA_CIPHER)
    CIPHER_EXTRA_OBJS="rsa.o"
    CIPHER_EXTRA_DIST="rsa.c rsa.h"
fi
AC_SUBST(CIPHER_EXTRA_OBJS)
AC_SUBST(CIPHER_EXTRA_DIST)

dnl
dnl If no gettext is found, default to gnu gettext
dnl
if test x$ac_cv_func_gettext = xno; then
    LIBS="$LIBS -lintl -L\$(topbuilddir)/intl"
fi


WK_DO_LINK_FILES

AC_OUTPUT([
Makefile
intl/Makefile
po/Makefile.in
util/Makefile
mpi/Makefile
cipher/Makefile
g10/Makefile
tools/Makefile
],[echo timestamp >stamp-h; sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile])

